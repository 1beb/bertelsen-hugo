<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>@beb</title><link>https://bertelsen.ca/</link><description>Recent content on @beb</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bertelsen.ca/index.xml" rel="self" type="application/rss+xml"/><item><title>crunchtabs</title><link>https://bertelsen.ca/projects/crunchtabs/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/projects/crunchtabs/</guid><description/></item><item><title>FinEventCentral.com</title><link>https://bertelsen.ca/projects/fineventcentral/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/projects/fineventcentral/</guid><description/></item><item><title>Bertelsen.ca</title><link>https://bertelsen.ca/projects/bertelsen-ca/</link><pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/projects/bertelsen-ca/</guid><description/></item><item><title>About</title><link>https://bertelsen.ca/about/</link><pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/about/</guid><description>About this site This site runs on hugo using the wonderful hugo-tania theme. The code for this site can be found on github. It is deployed via github action
About the Author Interested parties are always welcome to introduce themselves via email: my firstname at my lastname dot ca.</description></item><item><title>Notes</title><link>https://bertelsen.ca/articles/</link><pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/articles/</guid><description/></item><item><title>Projects</title><link>https://bertelsen.ca/projects/</link><pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/projects/</guid><description/></item><item><title>Rcpp and roxygem2</title><link>https://bertelsen.ca/post/rcpp-roxygen2/</link><pubDate>Sun, 28 Aug 2016 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/rcpp-roxygen2/</guid><description>Instructions for using Rcpp and Roxygen2 together. This assumes that Roxygen2 is managing your namespace:
DESCRIPTION:
In your DESCRIPTION file, add the line LinkingTo: Rcpp Also ensure that you import Rcpp, Imports: Rcpp along with all the other packages are imported in your namespace. Package Documentation:
Your package documentation (by convention in zzz.R or package.R) you should have the following: 1 2 3 4 5 6 7 8 9 10 11 #&amp;#39; your_package #&amp;#39; #&amp;#39; Description of your package #&amp;#39; #&amp;#39; @docType package #&amp;#39; @author you &amp;lt;youremail&amp;gt; #&amp;#39; @import Rcpp another_package another #&amp;#39; @importFrom Rcpp evalCpp #&amp;#39; @useDynLib your_package #&amp;#39; @name your_package NULL Functions:</description></item><item><title>Rcpp example using NA</title><link>https://bertelsen.ca/post/rcpp-and-na/</link><pubDate>Sun, 28 Aug 2016 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/rcpp-and-na/</guid><description>Dealing with NA in Rcpp can be a bit tricky to sort out, but the speed boosts are incredible and if you&amp;rsquo;re dealing with large data - worth the time to figure it out. But usage cases are important to consider in the example below you can see that vectorized operations are still very competitive and very concise. Rcpp doesn&amp;rsquo;t shine so much in this example, but it can when you have a problem that requires a waterfall of results (one result relies on the next and so on).</description></item><item><title>Montreal FSA Scraping Part Dieux</title><link>https://bertelsen.ca/post/montreal-scraping-2/</link><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/montreal-scraping-2/</guid><description>Although we were able to scrape from the web the FSA we wanted, it was unfortunately not a complete list. Instead, let&amp;rsquo;s try another route using some data that&amp;rsquo;s been crowdsourced, namely the geocoder.ca dataset or a subset provided by aggdata (as the geocoder.ca table is 50mbs and I don&amp;rsquo;t need that level of accuracy).
Let&amp;rsquo;s install some packages first. You may need to install some system files for this to work:</description></item><item><title>Updating Django 1.4 to 1.10 Learnings</title><link>https://bertelsen.ca/post/upgrading-to-django-1-10/</link><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/upgrading-to-django-1-10/</guid><description>I had a project that I wrote in Django, 1.4, back in 2012. It&amp;rsquo;s still in production and there are no problems with it. The only exception being that there are planned changes to the database schema. Weighing my options, I decided to move forward with an upgrade to Django 1.10, because migrations are now &amp;ldquo;built-in&amp;rdquo; and data reliability is more important to me than a few extra hours of trouble-shooting the differences between the versions.</description></item><item><title>Montreal FSA Scraping</title><link>https://bertelsen.ca/post/montreal-scraping/</link><pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/montreal-scraping/</guid><description>There&amp;rsquo;s no official database that I can find to define clearly some of the economic areas in Montreal, at least none that are free. However, wikipedia does seem to be rather well organized in this regard. Small scale scraping to identify FSAs for a particular locale, in the example below, Montérégie or &amp;ldquo;Rive-Sud&amp;rdquo; an affluent part of the greater Montreal area.
1 2 3 4 5 6 7 8 9 10 11 library(rvest) links &amp;lt;- read_html(&amp;#34;https://en.</description></item><item><title>TLS for RStudio and Shiny using Let's Encrypt</title><link>https://bertelsen.ca/post/tls-rstudio-shiny/</link><pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/tls-rstudio-shiny/</guid><description>Below is a very simple way to have https connections for the open source version of RStudio Server and Shiny Server.
1 2 3 sudo apt-get install docker sudo apt-get install python-pip sudo pip install docker-compose Now, in your user directory, create a text file using your preferred text editor, called docker-compose.yml, that looks like the following, keeping in mind that you need to replace: username with your ssh user name, SUB.</description></item><item><title>Example gitlab-ci.yml for R Projects</title><link>https://bertelsen.ca/post/example-gitlab-ci/</link><pubDate>Mon, 27 Jun 2016 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/example-gitlab-ci/</guid><description>Most people are running open source projects, so they can easily use github and travis for free. I don&amp;rsquo;t have that luxury, but gitlab has really caught my attention lately. Combining gitlab, gitlab runner with docker makes things very straightforward. Here is an example .gitlab-ci.yml file that you would need to include in the base directory of your R project to have it run R CMD check and run testthat tests.</description></item><item><title>Radial Plots with Plotly</title><link>https://bertelsen.ca/post/radial-plots-plotly/</link><pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/radial-plots-plotly/</guid><description>How to make a radial plot without using radial coordinates with plotly.
Let&amp;rsquo;s load a few libraries and pull some sample data. Then do some preparation by adding data associated with turning the graphic into a circle. A trivial application of high school SOHCATTOA, and finally plot. Comments included at each step.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 # Loading --------------------------------- library(plotly) library(dplyr) # just because!</description></item><item><title>Boostrap with logistic regression</title><link>https://bertelsen.ca/post/bootstrapping-logistic/</link><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/bootstrapping-logistic/</guid><description>A quick example of bootstraping a logistic regression. Nothing special here, example could be extended to any other type of model that has a coef() method.
1 2 3 4 5 6 7 8 9 10 11 12 library(boot) logit_test &amp;lt;- function(d,indices) { d &amp;lt;- d[indices,] fit &amp;lt;- glm(your ~ formula, data = d, family = &amp;#34;binomial&amp;#34;) return(coef(fit)) } boot_fit &amp;lt;- boot( data = your_data, statistic = logit_test, R = 1e5 )</description></item><item><title>Expand strsplit to data.frame</title><link>https://bertelsen.ca/post/expand-vector-to-df/</link><pubDate>Mon, 15 Jun 2015 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/expand-vector-to-df/</guid><description>Take a vector, with some seperator (i.e., ;), vec and expand it into a data.frame, filling in NA positions:
1 2 3 4 5 6 7 vec &amp;lt;- strsplit(as.character(vec), &amp;#34;;&amp;#34;) df &amp;lt;- rbind.fill( lapply( tmp, function(x) data.frame(t(x)) ) ) df &amp;lt;- as.data.frame(df)</description></item></channel></rss>
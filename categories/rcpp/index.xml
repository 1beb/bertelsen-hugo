<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rcpp on @beb</title><link>https://bertelsen.ca/categories/rcpp/</link><description>Recent content in Rcpp on @beb</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 28 Aug 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://bertelsen.ca/categories/rcpp/index.xml" rel="self" type="application/rss+xml"/><item><title>Rcpp and roxygem2</title><link>https://bertelsen.ca/post/rcpp-roxygen2/</link><pubDate>Sun, 28 Aug 2016 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/rcpp-roxygen2/</guid><description>Instructions for using Rcpp and Roxygen2 together. This assumes that Roxygen2 is managing your namespace:
DESCRIPTION:
In your DESCRIPTION file, add the line LinkingTo: Rcpp Also ensure that you import Rcpp, Imports: Rcpp along with all the other packages are imported in your namespace. Package Documentation:
Your package documentation (by convention in zzz.R or package.R) you should have the following: 1 2 3 4 5 6 7 8 9 10 11 #&amp;#39; your_package #&amp;#39; #&amp;#39; Description of your package #&amp;#39; #&amp;#39; @docType package #&amp;#39; @author you &amp;lt;youremail&amp;gt; #&amp;#39; @import Rcpp another_package another #&amp;#39; @importFrom Rcpp evalCpp #&amp;#39; @useDynLib your_package #&amp;#39; @name your_package NULL Functions:</description></item><item><title>Rcpp example using NA</title><link>https://bertelsen.ca/post/rcpp-and-na/</link><pubDate>Sun, 28 Aug 2016 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/rcpp-and-na/</guid><description>Dealing with NA in Rcpp can be a bit tricky to sort out, but the speed boosts are incredible and if you&amp;rsquo;re dealing with large data - worth the time to figure it out. But usage cases are important to consider in the example below you can see that vectorized operations are still very competitive and very concise. Rcpp doesn&amp;rsquo;t shine so much in this example, but it can when you have a problem that requires a waterfall of results (one result relies on the next and so on).</description></item><item><title>Expand strsplit to data.frame</title><link>https://bertelsen.ca/post/expand-vector-to-df/</link><pubDate>Mon, 15 Jun 2015 00:00:00 +0000</pubDate><guid>https://bertelsen.ca/post/expand-vector-to-df/</guid><description>Take a vector, with some seperator (i.e., ;), vec and expand it into a data.frame, filling in NA positions:
1 2 3 4 5 6 7 vec &amp;lt;- strsplit(as.character(vec), &amp;#34;;&amp;#34;) df &amp;lt;- rbind.fill( lapply( tmp, function(x) data.frame(t(x)) ) ) df &amp;lt;- as.data.frame(df)</description></item></channel></rss>